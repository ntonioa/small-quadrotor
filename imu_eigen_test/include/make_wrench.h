// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Core>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: <lambda>
 *
 * Args:
 *     tau: Matrix31
 *     Fz: Matrix11
 *
 * Outputs:
 *     y: Matrix41
 */
template <typename Scalar>
void MakeWrench(const Eigen::Matrix<Scalar, 3, 1>& tau, const Eigen::Matrix<Scalar, 1, 1>& Fz,
                Eigen::Matrix<Scalar, 4, 1>* const y = nullptr) {
  // Total ops: 0

  // Input arrays

  // Intermediate terms (0)

  // Output terms (1)
  if (y != nullptr) {
    Eigen::Matrix<Scalar, 4, 1>& _y = (*y);

    _y(0, 0) = tau(0, 0);
    _y(1, 0) = tau(1, 0);
    _y(2, 0) = tau(2, 0);
    _y(3, 0) = Fz(0, 0);
  }
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
